{"version":0,"fun_infos":[{"name":"eq_unit","arg_typs":["unit","unit"],"ret_typ":"bool(true)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"neq_int","arg_typs":["int('n)","int('m)"],"ret_typ":"bool('n != 'm)","effects":[],"calls":["eq_int","not_bool"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"neq_bool","arg_typs":["bool('ex50334#)","bool('ex50335#)"],"ret_typ":"bool","effects":[],"calls":["eq_bool","not_bool"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"__id","arg_typs":["int('n)"],"ret_typ":"int('n)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_option","arg_typs":["'a"],"ret_typ":"option('a)","effects":["undef"],"calls":["None","Some","internal_pick","undefined_unit"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"is_none","arg_typs":["option('a)"],"ret_typ":"bool","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"is_some","arg_typs":["option('a)"],"ret_typ":"bool","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"neq_bits","arg_typs":["vector('n, dec, bit)","vector('n, dec, bit)"],"ret_typ":"bool","effects":[],"calls":["eq_bits","not_bool"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"sail_mask","arg_typs":["int('len)","vector('v, dec, bit)"],"ret_typ":"vector('len, dec, bit)","effects":[],"calls":["bitvector_length","lteq_int","sail_zero_extend","truncate"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"sail_ones","arg_typs":["int('n)"],"ret_typ":"vector('n, dec, bit)","effects":[],"calls":["not_vec","sail_zeros"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"slice_mask","arg_typs":["implicit('n)","int('ex50376#)","int('ex50377#)"],"ret_typ":"vector('n, dec, bit)","effects":[],"calls":["gteq_int","sail_mask","sail_ones","sail_shiftleft","sub_bits"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"neq_vec","arg_typs":["vector('n, dec, bit)","vector('n, dec, bit)"],"ret_typ":"bool","effects":[],"calls":["eq_bits","not_bool"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"neq_anything","arg_typs":["'a","'a"],"ret_typ":"bool","effects":[],"calls":["eq_anything","not_bool"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"cast_unit_vec","arg_typs":["bit"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"__MIPS_write","arg_typs":["vector(64, dec, bit)","int('n)","vector((8 * 'n), dec, bit)"],"ret_typ":"unit","effects":["wmv"],"calls":["__WriteRAM"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"__MIPS_read","arg_typs":["vector(64, dec, bit)","int('n)"],"ret_typ":"vector((8 * 'n), dec, bit)","effects":["rmem"],"calls":["__ReadRAM"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"(operator ^^)","arg_typs":["vector('n, dec, bit)","int('m)"],"ret_typ":"vector(('n * 'm), dec, bit)","effects":[],"calls":["replicate_bits"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_exception","arg_typs":["unit"],"ret_typ":"exception","effects":["undef"],"calls":["Error_EBREAK","Error_internal_error","Error_misaligned_access","Error_not_implemented","ISAException","internal_pick","undefined_string","undefined_unit"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"mips_sign_extend","arg_typs":["implicit('m)","vector('n, dec, bit)"],"ret_typ":"vector('m, dec, bit)","effects":[],"calls":["sail_sign_extend"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"mips_zero_extend","arg_typs":["implicit('m)","vector('n, dec, bit)"],"ret_typ":"vector('m, dec, bit)","effects":[],"calls":["sail_zero_extend"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"zeros_implicit","arg_typs":["implicit('n)","unit"],"ret_typ":"vector('n, dec, bit)","effects":[],"calls":["sail_zeros"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"ones_implicit","arg_typs":["implicit('n)","unit"],"ret_typ":"vector('n, dec, bit)","effects":[],"calls":["sail_ones"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"(operator <_s)","arg_typs":["vector('n, dec, bit)","vector('n, dec, bit)"],"ret_typ":"bool","effects":[],"calls":["lt_int","signed"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"(operator >=_s)","arg_typs":["vector('n, dec, bit)","vector('n, dec, bit)"],"ret_typ":"bool","effects":[],"calls":["gteq_int","signed"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"(operator <_u)","arg_typs":["vector('n, dec, bit)","vector('n, dec, bit)"],"ret_typ":"bool","effects":[],"calls":["lt_int","unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"(operator >=_u)","arg_typs":["vector('n, dec, bit)","vector('n, dec, bit)"],"ret_typ":"bool","effects":[],"calls":["gteq_int","unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"bool_to_bits","arg_typs":["bool('ex50451#)"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"bool_to_bit","arg_typs":["bool('ex50452#)"],"ret_typ":"bit","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"bit_to_bool","arg_typs":["bit"],"ret_typ":"bool","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"bits_to_bool","arg_typs":["vector(1, dec, bit)"],"ret_typ":"bool","effects":[],"calls":["bit_to_bool","bitvector_access"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"to_bits","arg_typs":["int('l)","int('ex50453#)"],"ret_typ":"vector('l, dec, bit)","effects":[],"calls":["get_slice_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"mask","arg_typs":["implicit('n)","vector('m, dec, bit)"],"ret_typ":"vector('n, dec, bit)","effects":[],"calls":["sub_atom","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_CauseReg","arg_typs":["unit"],"ret_typ":"CauseReg","effects":["undef"],"calls":["undefined_bit","undefined_vector"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Mk_CauseReg","arg_typs":["vector(32, dec, bit)"],"ret_typ":"CauseReg","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CauseReg_bits","arg_typs":["CauseReg"],"ret_typ":"vector(32, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CauseReg_bits","arg_typs":["register(CauseReg)","vector(32, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CauseReg_bits","arg_typs":["CauseReg","vector(32, dec, bit)"],"ret_typ":"CauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CauseReg_BD","arg_typs":["CauseReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CauseReg_BD","arg_typs":["register(CauseReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CauseReg_BD","arg_typs":["CauseReg","vector(1, dec, bit)"],"ret_typ":"CauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CauseReg_CE","arg_typs":["CauseReg"],"ret_typ":"vector(2, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CauseReg_CE","arg_typs":["register(CauseReg)","vector(2, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CauseReg_CE","arg_typs":["CauseReg","vector(2, dec, bit)"],"ret_typ":"CauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CauseReg_IV","arg_typs":["CauseReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CauseReg_IV","arg_typs":["register(CauseReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CauseReg_IV","arg_typs":["CauseReg","vector(1, dec, bit)"],"ret_typ":"CauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CauseReg_WP","arg_typs":["CauseReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CauseReg_WP","arg_typs":["register(CauseReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CauseReg_WP","arg_typs":["CauseReg","vector(1, dec, bit)"],"ret_typ":"CauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CauseReg_IP","arg_typs":["CauseReg"],"ret_typ":"vector(8, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CauseReg_IP","arg_typs":["register(CauseReg)","vector(8, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CauseReg_IP","arg_typs":["CauseReg","vector(8, dec, bit)"],"ret_typ":"CauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CauseReg_ExcCode","arg_typs":["CauseReg"],"ret_typ":"vector(5, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CauseReg_ExcCode","arg_typs":["register(CauseReg)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CauseReg_ExcCode","arg_typs":["CauseReg","vector(5, dec, bit)"],"ret_typ":"CauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_TLBEntryLoReg","arg_typs":["unit"],"ret_typ":"TLBEntryLoReg","effects":["undef"],"calls":["undefined_bit","undefined_vector"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Mk_TLBEntryLoReg","arg_typs":["vector(64, dec, bit)"],"ret_typ":"TLBEntryLoReg","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryLoReg_bits","arg_typs":["TLBEntryLoReg"],"ret_typ":"vector(64, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryLoReg_bits","arg_typs":["register(TLBEntryLoReg)","vector(64, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryLoReg_bits","arg_typs":["TLBEntryLoReg","vector(64, dec, bit)"],"ret_typ":"TLBEntryLoReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryLoReg_CapS","arg_typs":["TLBEntryLoReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryLoReg_CapS","arg_typs":["register(TLBEntryLoReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryLoReg_CapS","arg_typs":["TLBEntryLoReg","vector(1, dec, bit)"],"ret_typ":"TLBEntryLoReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryLoReg_CapL","arg_typs":["TLBEntryLoReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryLoReg_CapL","arg_typs":["register(TLBEntryLoReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryLoReg_CapL","arg_typs":["TLBEntryLoReg","vector(1, dec, bit)"],"ret_typ":"TLBEntryLoReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryLoReg_PFN","arg_typs":["TLBEntryLoReg"],"ret_typ":"vector(24, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryLoReg_PFN","arg_typs":["register(TLBEntryLoReg)","vector(24, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryLoReg_PFN","arg_typs":["TLBEntryLoReg","vector(24, dec, bit)"],"ret_typ":"TLBEntryLoReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryLoReg_C","arg_typs":["TLBEntryLoReg"],"ret_typ":"vector(3, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryLoReg_C","arg_typs":["register(TLBEntryLoReg)","vector(3, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryLoReg_C","arg_typs":["TLBEntryLoReg","vector(3, dec, bit)"],"ret_typ":"TLBEntryLoReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryLoReg_D","arg_typs":["TLBEntryLoReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryLoReg_D","arg_typs":["register(TLBEntryLoReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryLoReg_D","arg_typs":["TLBEntryLoReg","vector(1, dec, bit)"],"ret_typ":"TLBEntryLoReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryLoReg_V","arg_typs":["TLBEntryLoReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryLoReg_V","arg_typs":["register(TLBEntryLoReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryLoReg_V","arg_typs":["TLBEntryLoReg","vector(1, dec, bit)"],"ret_typ":"TLBEntryLoReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryLoReg_G","arg_typs":["TLBEntryLoReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryLoReg_G","arg_typs":["register(TLBEntryLoReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryLoReg_G","arg_typs":["TLBEntryLoReg","vector(1, dec, bit)"],"ret_typ":"TLBEntryLoReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_TLBEntryHiReg","arg_typs":["unit"],"ret_typ":"TLBEntryHiReg","effects":["undef"],"calls":["undefined_bit","undefined_vector"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Mk_TLBEntryHiReg","arg_typs":["vector(64, dec, bit)"],"ret_typ":"TLBEntryHiReg","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryHiReg_bits","arg_typs":["TLBEntryHiReg"],"ret_typ":"vector(64, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryHiReg_bits","arg_typs":["register(TLBEntryHiReg)","vector(64, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryHiReg_bits","arg_typs":["TLBEntryHiReg","vector(64, dec, bit)"],"ret_typ":"TLBEntryHiReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryHiReg_R","arg_typs":["TLBEntryHiReg"],"ret_typ":"vector(2, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryHiReg_R","arg_typs":["register(TLBEntryHiReg)","vector(2, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryHiReg_R","arg_typs":["TLBEntryHiReg","vector(2, dec, bit)"],"ret_typ":"TLBEntryHiReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryHiReg_VPN2","arg_typs":["TLBEntryHiReg"],"ret_typ":"vector(27, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryHiReg_VPN2","arg_typs":["register(TLBEntryHiReg)","vector(27, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryHiReg_VPN2","arg_typs":["TLBEntryHiReg","vector(27, dec, bit)"],"ret_typ":"TLBEntryHiReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntryHiReg_ASID","arg_typs":["TLBEntryHiReg"],"ret_typ":"vector(8, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntryHiReg_ASID","arg_typs":["register(TLBEntryHiReg)","vector(8, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntryHiReg_ASID","arg_typs":["TLBEntryHiReg","vector(8, dec, bit)"],"ret_typ":"TLBEntryHiReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_ContextReg","arg_typs":["unit"],"ret_typ":"ContextReg","effects":["undef"],"calls":["undefined_bit","undefined_vector"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Mk_ContextReg","arg_typs":["vector(64, dec, bit)"],"ret_typ":"ContextReg","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_ContextReg_bits","arg_typs":["ContextReg"],"ret_typ":"vector(64, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_ContextReg_bits","arg_typs":["register(ContextReg)","vector(64, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_ContextReg_bits","arg_typs":["ContextReg","vector(64, dec, bit)"],"ret_typ":"ContextReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_ContextReg_PTEBase","arg_typs":["ContextReg"],"ret_typ":"vector(41, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_ContextReg_PTEBase","arg_typs":["register(ContextReg)","vector(41, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_ContextReg_PTEBase","arg_typs":["ContextReg","vector(41, dec, bit)"],"ret_typ":"ContextReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_ContextReg_BadVPN2","arg_typs":["ContextReg"],"ret_typ":"vector(19, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_ContextReg_BadVPN2","arg_typs":["register(ContextReg)","vector(19, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_ContextReg_BadVPN2","arg_typs":["ContextReg","vector(19, dec, bit)"],"ret_typ":"ContextReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_XContextReg","arg_typs":["unit"],"ret_typ":"XContextReg","effects":["undef"],"calls":["undefined_bit","undefined_vector"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Mk_XContextReg","arg_typs":["vector(64, dec, bit)"],"ret_typ":"XContextReg","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_XContextReg_bits","arg_typs":["XContextReg"],"ret_typ":"vector(64, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_XContextReg_bits","arg_typs":["register(XContextReg)","vector(64, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_XContextReg_bits","arg_typs":["XContextReg","vector(64, dec, bit)"],"ret_typ":"XContextReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_XContextReg_XPTEBase","arg_typs":["XContextReg"],"ret_typ":"vector(31, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_XContextReg_XPTEBase","arg_typs":["register(XContextReg)","vector(31, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_XContextReg_XPTEBase","arg_typs":["XContextReg","vector(31, dec, bit)"],"ret_typ":"XContextReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_XContextReg_XR","arg_typs":["XContextReg"],"ret_typ":"vector(2, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_XContextReg_XR","arg_typs":["register(XContextReg)","vector(2, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_XContextReg_XR","arg_typs":["XContextReg","vector(2, dec, bit)"],"ret_typ":"XContextReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_XContextReg_XBadVPN2","arg_typs":["XContextReg"],"ret_typ":"vector(27, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_XContextReg_XBadVPN2","arg_typs":["register(XContextReg)","vector(27, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_XContextReg_XBadVPN2","arg_typs":["XContextReg","vector(27, dec, bit)"],"ret_typ":"XContextReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MAX","arg_typs":["int('n)"],"ret_typ":"int((2 ^ 'n - 1))","effects":[],"calls":["pow2","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_TLBEntry","arg_typs":["unit"],"ret_typ":"TLBEntry","effects":["undef"],"calls":["undefined_bit","undefined_vector"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Mk_TLBEntry","arg_typs":["vector(117, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_bits","arg_typs":["TLBEntry"],"ret_typ":"vector(117, dec, bit)","effects":[],"calls":["bitvector_concat","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_bits","arg_typs":["register(TLBEntry)","vector(117, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_bits","arg_typs":["TLBEntry","vector(117, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_pagemask","arg_typs":["TLBEntry"],"ret_typ":"vector(16, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_pagemask","arg_typs":["register(TLBEntry)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_pagemask","arg_typs":["TLBEntry","vector(16, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_r","arg_typs":["TLBEntry"],"ret_typ":"vector(2, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_r","arg_typs":["register(TLBEntry)","vector(2, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_r","arg_typs":["TLBEntry","vector(2, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_vpn2","arg_typs":["TLBEntry"],"ret_typ":"vector(27, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_vpn2","arg_typs":["register(TLBEntry)","vector(27, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_vpn2","arg_typs":["TLBEntry","vector(27, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_asid","arg_typs":["TLBEntry"],"ret_typ":"vector(8, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_asid","arg_typs":["register(TLBEntry)","vector(8, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_asid","arg_typs":["TLBEntry","vector(8, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_g","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_g","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_g","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_valid","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_valid","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_valid","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_caps1","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_caps1","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_caps1","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_capl1","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_capl1","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_capl1","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_pfn1","arg_typs":["TLBEntry"],"ret_typ":"vector(24, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_pfn1","arg_typs":["register(TLBEntry)","vector(24, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_pfn1","arg_typs":["TLBEntry","vector(24, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_c1","arg_typs":["TLBEntry"],"ret_typ":"vector(3, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_c1","arg_typs":["register(TLBEntry)","vector(3, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_c1","arg_typs":["TLBEntry","vector(3, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_d1","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_d1","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_d1","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_v1","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_v1","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_v1","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_caps0","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_caps0","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_caps0","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_capl0","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_capl0","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_capl0","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_pfn0","arg_typs":["TLBEntry"],"ret_typ":"vector(24, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_pfn0","arg_typs":["register(TLBEntry)","vector(24, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_pfn0","arg_typs":["TLBEntry","vector(24, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_c0","arg_typs":["TLBEntry"],"ret_typ":"vector(3, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_c0","arg_typs":["register(TLBEntry)","vector(3, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_c0","arg_typs":["TLBEntry","vector(3, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_d0","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_d0","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_d0","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_TLBEntry_v0","arg_typs":["TLBEntry"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_TLBEntry_v0","arg_typs":["register(TLBEntry)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_TLBEntry_v0","arg_typs":["TLBEntry","vector(1, dec, bit)"],"ret_typ":"TLBEntry","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_StatusReg","arg_typs":["unit"],"ret_typ":"StatusReg","effects":["undef"],"calls":["undefined_bit","undefined_vector"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Mk_StatusReg","arg_typs":["vector(32, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_bits","arg_typs":["StatusReg"],"ret_typ":"vector(32, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_bits","arg_typs":["register(StatusReg)","vector(32, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_bits","arg_typs":["StatusReg","vector(32, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_CU","arg_typs":["StatusReg"],"ret_typ":"vector(4, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_CU","arg_typs":["register(StatusReg)","vector(4, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_CU","arg_typs":["StatusReg","vector(4, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_BEV","arg_typs":["StatusReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_BEV","arg_typs":["register(StatusReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_BEV","arg_typs":["StatusReg","vector(1, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_IM","arg_typs":["StatusReg"],"ret_typ":"vector(8, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_IM","arg_typs":["register(StatusReg)","vector(8, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_IM","arg_typs":["StatusReg","vector(8, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_KX","arg_typs":["StatusReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_KX","arg_typs":["register(StatusReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_KX","arg_typs":["StatusReg","vector(1, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_SX","arg_typs":["StatusReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_SX","arg_typs":["register(StatusReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_SX","arg_typs":["StatusReg","vector(1, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_UX","arg_typs":["StatusReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_UX","arg_typs":["register(StatusReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_UX","arg_typs":["StatusReg","vector(1, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_KSU","arg_typs":["StatusReg"],"ret_typ":"vector(2, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_KSU","arg_typs":["register(StatusReg)","vector(2, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_KSU","arg_typs":["StatusReg","vector(2, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_ERL","arg_typs":["StatusReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_ERL","arg_typs":["register(StatusReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_ERL","arg_typs":["StatusReg","vector(1, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_EXL","arg_typs":["StatusReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_EXL","arg_typs":["register(StatusReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_EXL","arg_typs":["StatusReg","vector(1, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_StatusReg_IE","arg_typs":["StatusReg"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_StatusReg_IE","arg_typs":["register(StatusReg)","vector(1, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_StatusReg_IE","arg_typs":["StatusReg","vector(1, dec, bit)"],"ret_typ":"StatusReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"execute_branch_mips","arg_typs":["vector(64, dec, bit)"],"ret_typ":"unit","effects":["wreg"],"calls":[],"regs_read":[],"regs_written":["BranchPending","DelayedPC","NextInBranchDelay"],"trans_regs_read":[],"trans_regs_written":["BranchPending","DelayedPC","NextInBranchDelay"]},{"name":"NotWordVal","arg_typs":["vector(64, dec, bit)"],"ret_typ":"bool","effects":[],"calls":["bitvector_access","cast_unit_vec","neq_bits","vector_subrange","(operator ^^)"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"rGPR","arg_typs":["vector(5, dec, bit)"],"ret_typ":"vector(64, dec, bit)","effects":["rreg"],"calls":["eq_int","plain_vector_access","unsigned"],"regs_read":["GPR"],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":[]},{"name":"wGPR","arg_typs":["vector(5, dec, bit)","vector(64, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["neq_int","plain_vector_update","prerr","prerr_bits","string_of_int","unsigned"],"regs_read":["GPR"],"regs_written":["GPR"],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"MEMr","arg_typs":["vector(64, dec, bit)","int('n)"],"ret_typ":"vector((8 * 'n), dec, bit)","effects":["rmem"],"calls":["__MIPS_read"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMr_reserve","arg_typs":["vector(64, dec, bit)","int('n)"],"ret_typ":"vector((8 * 'n), dec, bit)","effects":["rmem"],"calls":["__MIPS_read"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEM_sync","arg_typs":["unit"],"ret_typ":"unit","effects":["barr"],"calls":["skip_barr"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMea","arg_typs":["vector(64, dec, bit)","int('n)"],"ret_typ":"unit","effects":["eamem"],"calls":["skip_eamem"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMea_conditional","arg_typs":["vector(64, dec, bit)","int('n)"],"ret_typ":"unit","effects":["eamem"],"calls":["skip_eamem"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMval","arg_typs":["vector(64, dec, bit)","int('n)","vector((8 * 'n), dec, bit)"],"ret_typ":"unit","effects":["wmv"],"calls":["__MIPS_write"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMval_conditional","arg_typs":["vector(64, dec, bit)","int('n)","vector((8 * 'n), dec, bit)"],"ret_typ":"bool","effects":["wmv"],"calls":["__MIPS_write"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Exception_of_num","arg_typs":["int('e)"],"ret_typ":"Exception","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_Exception","arg_typs":["Exception"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 18). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_Exception","arg_typs":["unit"],"ret_typ":"Exception","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"ExceptionCode","arg_typs":["Exception"],"ret_typ":"vector(5, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"string_of_exception","arg_typs":["Exception"],"ret_typ":"string","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"traceException","arg_typs":["Exception"],"ret_typ":"unit","effects":[],"calls":["prerr","prerr_endline","string_of_exception"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"exceptionVectorOffset","arg_typs":["Exception"],"ret_typ":"vector(12, dec, bit)","effects":["rreg"],"calls":["_get_StatusReg_EXL","bits_to_bool","eq_anything","or_bool"],"regs_read":["CP0Status"],"regs_written":[],"trans_regs_read":["CP0Status"],"trans_regs_written":[]},{"name":"exceptionVectorBase","arg_typs":["unit"],"ret_typ":"vector(64, dec, bit)","effects":["rreg"],"calls":["_get_StatusReg_BEV","bits_to_bool"],"regs_read":["CP0Status"],"regs_written":[],"trans_regs_read":["CP0Status"],"trans_regs_written":[]},{"name":"updateBadInstr","arg_typs":["unit"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["bit_to_bool","bitvector_access"],"regs_read":["CurrentInstrBits","InBranchDelay","LastInstrBits"],"regs_written":["CP0BadInstr","CP0BadInstrP"],"trans_regs_read":["CurrentInstrBits","InBranchDelay","LastInstrBits"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP"]},{"name":"undefined_Capability","arg_typs":["unit"],"ret_typ":"Capability","effects":["undef"],"calls":["undefined_bit","undefined_bool","undefined_vector"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getCapBase","arg_typs":["Capability"],"ret_typ":"range(0, (2 ^ 64 - 1))","effects":[],"calls":["unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getCapOffset","arg_typs":["Capability"],"ret_typ":"range(0, (2 ^ 64 - 1))","effects":[],"calls":["emod_int","pow2","sub_atom","unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"setCapOffset","arg_typs":["Capability","vector(64, dec, bit)"],"ret_typ":"(bool, Capability)","effects":[],"calls":["add_bits"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"set_next_pcc","arg_typs":["Capability"],"ret_typ":"unit","effects":["wreg"],"calls":[],"regs_read":[],"regs_written":["DelayedPCC","NextPCC"],"trans_regs_read":[],"trans_regs_written":["DelayedPCC","NextPCC"]},{"name":"SignalException","arg_typs":["Exception"],"ret_typ":"'o","effects":["escape","rreg","wreg"],"calls":["ExceptionCode","ISAException","_get_StatusReg_EXL","_set_CauseReg_BD","_set_CauseReg_ExcCode","_set_StatusReg_EXL","add_bits","bit_to_bool","bits_to_bool","bitvector_access","eq_int","exceptionVectorBase","exceptionVectorOffset","getCapBase","getCapOffset","mips_zero_extend","not_bool","setCapOffset","set_next_pcc","sub_vec","sub_vec_int","to_bits","traceException","unsigned","updateBadInstr"],"regs_read":["CP0Cause","CP0Status","InBranchDelay","KCC","PC","PCC"],"regs_written":["CP0Cause","CP0Status","EPCC","NextPC"],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"SignalExceptionBadAddr","arg_typs":["Exception","vector(64, dec, bit)"],"ret_typ":"'o","effects":["escape","rreg","wreg"],"calls":["SignalException"],"regs_read":[],"regs_written":["CP0BadVAddr"],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"SignalExceptionTLB","arg_typs":["Exception","vector(64, dec, bit)"],"ret_typ":"'o","effects":["escape","rreg","wreg"],"calls":["SignalException","_set_ContextReg_BadVPN2","_set_TLBEntryHiReg_R","_set_TLBEntryHiReg_VPN2","_set_XContextReg_XBadVPN2","_set_XContextReg_XR","vector_subrange"],"regs_read":["TLBContext","TLBEntryHi","TLBXContext"],"regs_written":["CP0BadVAddr","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"MemAccessType_of_num","arg_typs":["int('e)"],"ret_typ":"MemAccessType","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_MemAccessType","arg_typs":["MemAccessType"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 2). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_MemAccessType","arg_typs":["unit"],"ret_typ":"MemAccessType","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"AccessLevel_of_num","arg_typs":["int('e)"],"ret_typ":"AccessLevel","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_AccessLevel","arg_typs":["AccessLevel"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 2). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_AccessLevel","arg_typs":["unit"],"ret_typ":"AccessLevel","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"int_of_AccessLevel","arg_typs":["AccessLevel"],"ret_typ":"{(n : Int), n in {0, 1, 2}. int(n)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"grantsAccess","arg_typs":["AccessLevel","AccessLevel"],"ret_typ":"bool","effects":[],"calls":["gteq_int","int_of_AccessLevel"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getAccessLevel","arg_typs":["unit"],"ret_typ":"AccessLevel","effects":["rreg"],"calls":["_get_StatusReg_ERL","_get_StatusReg_EXL","_get_StatusReg_KSU","bits_to_bool","eq_bits","or_bool"],"regs_read":["CP0Status"],"regs_written":[],"trans_regs_read":["CP0Status"],"trans_regs_written":[]},{"name":"pcc_access_system_regs","arg_typs":["unit"],"ret_typ":"bool","effects":["rreg"],"calls":[],"regs_read":["PCC"],"regs_written":[],"trans_regs_read":["PCC"],"trans_regs_written":[]},{"name":"undefined_CapCauseReg","arg_typs":["unit"],"ret_typ":"CapCauseReg","effects":["undef"],"calls":["undefined_bit","undefined_vector"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"CapExCode","arg_typs":["CapEx"],"ret_typ":"vector(8, dec, bit)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CapCauseReg_ExcCode","arg_typs":["register(CapCauseReg)","vector(8, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CapCauseReg_RegNum","arg_typs":["register(CapCauseReg)","vector(8, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"string_of_capex","arg_typs":["CapEx"],"ret_typ":"string","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"raise_c2_exception8","arg_typs":["CapEx","vector(8, dec, bit)"],"ret_typ":"'o","effects":["escape","rreg","wreg"],"calls":["BitStr","CapExCode","SignalException","_set_CapCauseReg_ExcCode","_set_CapCauseReg_RegNum","eq_anything","or_bool","prerr","prerr_endline","string_of_capex"],"regs_read":["CapCause"],"regs_written":["CapCause"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"raise_c2_exception_noreg","arg_typs":["CapEx"],"ret_typ":"'o","effects":["escape","rreg","wreg"],"calls":["raise_c2_exception8"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"checkCP0AccessHook","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["not","pcc_access_system_regs","raise_c2_exception_noreg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"checkCP0Access","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","_get_StatusReg_CU","_set_CauseReg_CE","and_bool","bit_to_bool","bitvector_access","checkCP0AccessHook","getAccessLevel","neq_anything","not_bool"],"regs_read":["CP0Cause","CP0Status"],"regs_written":["CP0Cause"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"incrementCP0Count","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","_get_CauseReg_IP","_get_StatusReg_ERL","_get_StatusReg_EXL","_get_StatusReg_IE","_get_StatusReg_IM","_set_CauseReg_IP","add_bits_int","and_bool","and_vec","bits_to_bool","eq_bits","neq_bits","not_bool","or_vec","sub_vec_int"],"regs_read":["CP0Cause","CP0Compare","CP0Count","CP0Status","TLBRandom","TLBWired"],"regs_written":["CP0Cause","CP0Count","TLBRandom"],"trans_regs_read":["CP0Cause","CP0Compare","CP0Count","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBRandom","TLBWired"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Count","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC","TLBRandom"]},{"name":"decode_failure_of_num","arg_typs":["int('e)"],"ret_typ":"decode_failure","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_decode_failure","arg_typs":["decode_failure"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 3). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_decode_failure","arg_typs":["unit"],"ret_typ":"decode_failure","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Comparison_of_num","arg_typs":["int('e)"],"ret_typ":"Comparison","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_Comparison","arg_typs":["Comparison"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 7). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_Comparison","arg_typs":["unit"],"ret_typ":"Comparison","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"compare","arg_typs":["Comparison","vector(64, dec, bit)","vector(64, dec, bit)"],"ret_typ":"bool","effects":[],"calls":["eq_bits","neq_bits","(operator <_s)","(operator <_u)","(operator >=_s)","(operator >=_u)"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"WordType_of_num","arg_typs":["int('e)"],"ret_typ":"WordType","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_WordType","arg_typs":["WordType"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 3). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_WordType","arg_typs":["unit"],"ret_typ":"WordType","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"WordTypeUnaligned_of_num","arg_typs":["int('e)"],"ret_typ":"WordTypeUnaligned","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_WordTypeUnaligned","arg_typs":["WordTypeUnaligned"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 3). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_WordTypeUnaligned","arg_typs":["unit"],"ret_typ":"WordTypeUnaligned","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"wordWidthBytes","arg_typs":["WordType"],"ret_typ":"range(1, 8)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"isAddressAligned","arg_typs":["vector(64, dec, bit)","WordType"],"ret_typ":"bool","effects":[],"calls":["add_atom","ediv_int","eq_int","sub_atom","unsigned","wordWidthBytes"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"extendLoad","arg_typs":["vector('sz, dec, bit)","bool('ex50867#)"],"ret_typ":"vector(64, dec, bit)","effects":[],"calls":["mips_sign_extend","mips_zero_extend"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMr_wrapper","arg_typs":["vector(64, dec, bit)","int('n)"],"ret_typ":"vector((8 * 'n), dec, bit)","effects":["rmem","rreg","wreg"],"calls":["MEMr","__id","bitvector_concat","eq_bits","mask","mult_atom","reverse_endianness"],"regs_read":["UART_RDATA","UART_RVALID"],"regs_written":["UART_RVALID"],"trans_regs_read":["UART_RDATA","UART_RVALID"],"trans_regs_written":["UART_RVALID"]},{"name":"MEMr_reserve_wrapper","arg_typs":["vector(64, dec, bit)","int('n)"],"ret_typ":"vector((8 * 'n), dec, bit)","effects":["rmem"],"calls":["MEMr_reserve","reverse_endianness"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"init_cp0_state","arg_typs":["unit"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["_set_StatusReg_BEV","cast_unit_vec"],"regs_read":["CP0Status"],"regs_written":["CP0Status"],"trans_regs_read":["CP0Status"],"trans_regs_written":["CP0Status"]},{"name":"is_zero_subrange","arg_typs":["vector('n, dec, bit)","int('ex50875#)","int('ex50876#)"],"ret_typ":"bool","effects":[],"calls":["add_atom","and_vec","bitvector_length","eq_bits","extzv","slice_mask","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"is_zeros_slice","arg_typs":["vector('n, dec, bit)","int('ex50880#)","int('ex50881#)"],"ret_typ":"bool","effects":[],"calls":["and_vec","bitvector_length","eq_bits","extzv","slice_mask"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"is_ones_subrange","arg_typs":["vector('n, dec, bit)","int('ex50885#)","int('ex50886#)"],"ret_typ":"bool","effects":[],"calls":["add_atom","and_vec","bitvector_length","eq_bits","slice_mask","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"is_ones_slice","arg_typs":["vector('n, dec, bit)","int('ex50900#)","int('ex50901#)"],"ret_typ":"bool","effects":[],"calls":["and_vec","bitvector_length","eq_bits","slice_mask"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"slice_slice_concat","arg_typs":["implicit('r)","vector('n, dec, bit)","int('ex50915#)","int('ex50916#)","vector('m, dec, bit)","int('ex50917#)","int('ex50918#)"],"ret_typ":"vector('r, dec, bit)","effects":[],"calls":["and_vec","bitvector_length","extzv","or_vec","sail_shiftleft","sail_shiftright","slice_mask"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"slice_zeros_concat","arg_typs":["vector('n, dec, bit)","int('ex50919#)","int('p)","int('q)"],"ret_typ":"vector(('p + 'q), dec, bit)","effects":[],"calls":["add_atom","and_vec","bitvector_length","extzv","sail_shiftleft","sail_shiftright","slice_mask"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"subrange_subrange_eq","arg_typs":["vector('n, dec, bit)","int('ex50920#)","int('ex50921#)","vector('n, dec, bit)","int('ex50922#)","int('ex50923#)"],"ret_typ":"bool","effects":[],"calls":["add_atom","and_vec","bitvector_length","eq_bits","sail_shiftright","slice_mask","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"subrange_subrange_concat","arg_typs":["implicit('s)","vector('n, dec, bit)","int('o)","int('p)","vector('m, dec, bit)","int('q)","int('r)"],"ret_typ":"vector('s, dec, bit)","effects":[],"calls":["add_atom","and_vec","bitvector_length","extzv","or_vec","sail_shiftleft","sail_shiftright","slice_mask","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"place_subrange","arg_typs":["implicit('m)","vector('n, dec, bit)","int('ex50924#)","int('ex50925#)","int('ex50926#)"],"ret_typ":"vector('m, dec, bit)","effects":[],"calls":["add_atom","and_vec","bitvector_length","extzv","sail_shiftleft","sail_shiftright","slice_mask","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"place_slice","arg_typs":["implicit('m)","vector('n, dec, bit)","int('ex50927#)","int('ex50928#)","int('ex50929#)"],"ret_typ":"vector('m, dec, bit)","effects":[],"calls":["and_vec","bitvector_length","extzv","sail_shiftleft","sail_shiftright","slice_mask"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"set_slice_zeros","arg_typs":["int('n)","vector('n, dec, bit)","int('ex50930#)","int('ex50931#)"],"ret_typ":"vector('n, dec, bit)","effects":[],"calls":["and_vec","not_vec","slice_mask"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"zext_slice","arg_typs":["implicit('m)","vector('n, dec, bit)","int('ex50944#)","int('ex50945#)"],"ret_typ":"vector('m, dec, bit)","effects":[],"calls":["and_vec","bitvector_length","extzv","sail_shiftright","slice_mask"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"sext_slice","arg_typs":["implicit('m)","vector('n, dec, bit)","int('ex50946#)","int('ex50947#)"],"ret_typ":"vector('m, dec, bit)","effects":[],"calls":["and_vec","bitvector_length","extsv","sail_arith_shiftright","sail_shiftleft","slice_mask","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"place_slice_signed","arg_typs":["implicit('m)","vector('n, dec, bit)","int('ex50948#)","int('ex50949#)","int('ex50950#)"],"ret_typ":"vector('m, dec, bit)","effects":[],"calls":["sail_shiftleft","sext_slice"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"place_subrange_signed","arg_typs":["implicit('m)","vector('n, dec, bit)","int('ex50951#)","int('ex50952#)","int('ex50953#)"],"ret_typ":"vector('m, dec, bit)","effects":[],"calls":["add_atom","place_slice_signed","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"unsigned_slice","arg_typs":["vector('n, dec, bit)","int('ex50954#)","int('l)"],"ret_typ":"{('m : Int), (0 <= 'm & 'm < 2 ^ 'l). int('m)}","effects":[],"calls":["_builtin_mod_nat","_builtin_pow2","_builtin_unsigned","and_vec","bitvector_length","sail_shiftright","slice_mask"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"unsigned_subrange","arg_typs":["vector('n, dec, bit)","int('i)","int('j)"],"ret_typ":"{('m : Int), (0 <= 'm & 'm < 2 ^ (('i - 'j) + 1)). int('m)}","effects":[],"calls":["_builtin_mod_nat","_builtin_pow2","_builtin_unsigned","add_atom","and_vec","bitvector_length","sail_shiftright","slice_mask","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"zext_ones","arg_typs":["implicit('n)","int('ex50967#)"],"ret_typ":"vector('n, dec, bit)","effects":[],"calls":["__id","extsv","sail_shiftright","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"vector_update_subrange_from_subrange","arg_typs":["implicit('n1)","vector('n1, dec, bit)","int('s1)","int('e1)","vector('n2, dec, bit)","int('s2)","int('e2)"],"ret_typ":"vector('n1, dec, bit)","effects":[],"calls":["add_atom","and_vec","bitvector_length","extzv","not_vec","or_vec","sail_shiftleft","sail_shiftright","slice_mask","sub_atom"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"tlbEntryMatch","arg_typs":["vector(2, dec, bit)","vector(27, dec, bit)","vector(8, dec, bit)","TLBEntry"],"ret_typ":"bool","effects":[],"calls":["_get_TLBEntry_asid","_get_TLBEntry_g","_get_TLBEntry_pagemask","_get_TLBEntry_r","_get_TLBEntry_valid","_get_TLBEntry_vpn2","and_bool","and_vec","bits_to_bool","eq_bits","mips_zero_extend","not_vec","or_bool"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"tlbSearch","arg_typs":["vector(64, dec, bit)"],"ret_typ":"option(vector(6, dec, bit))","effects":["escape","rreg"],"calls":["None","Some","__id","_get_TLBEntryHiReg_ASID","early_return","foreach#","lteq_int","plain_vector_access","reg_deref","tlbEntryMatch","to_bits","vector_subrange"],"regs_read":["TLBEntryHi"],"regs_written":[],"trans_regs_read":["TLBEntryHi"],"trans_regs_written":[]},{"name":"TLBTranslate2","arg_typs":["vector(64, dec, bit)","MemAccessType"],"ret_typ":"(vector(64, dec, bit), bool)","effects":["escape","rreg","undef","wreg"],"calls":["SignalExceptionTLB","_get_TLBEntry_capl0","_get_TLBEntry_capl1","_get_TLBEntry_caps0","_get_TLBEntry_caps1","_get_TLBEntry_d0","_get_TLBEntry_d1","_get_TLBEntry_pagemask","_get_TLBEntry_pfn0","_get_TLBEntry_pfn1","_get_TLBEntry_v0","_get_TLBEntry_v1","and_bool","bit_to_bool","bits_to_bool","bitvector_access","bitvector_concat","eq_anything","eq_bits","mips_zero_extend","not_bool","plain_vector_access","reg_deref","sub_atom","tlbSearch","undefined_range","unsigned","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"TLBTranslateC","arg_typs":["vector(64, dec, bit)","MemAccessType"],"ret_typ":"(vector(64, dec, bit), bool)","effects":["escape","rreg","undef","wreg"],"calls":["None","SignalExceptionBadAddr","Some","TLBTranslate2","and_bool","bitvector_concat","eq_anything","eq_bits","getAccessLevel","grantsAccess","gt_int","not","not_bool","unsigned","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"TLBTranslate","arg_typs":["vector(64, dec, bit)","MemAccessType"],"ret_typ":"vector(64, dec, bit)","effects":["escape","rreg","undef","wreg"],"calls":["TLBTranslateC"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"CPtrCmpOp_of_num","arg_typs":["int('e)"],"ret_typ":"CPtrCmpOp","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_CPtrCmpOp","arg_typs":["CPtrCmpOp"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 7). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_CPtrCmpOp","arg_typs":["unit"],"ret_typ":"CPtrCmpOp","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"ClearRegSet_of_num","arg_typs":["int('e)"],"ret_typ":"ClearRegSet","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_ClearRegSet","arg_typs":["ClearRegSet"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 3). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_ClearRegSet","arg_typs":["unit"],"ret_typ":"ClearRegSet","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"capBitsToCapability","arg_typs":["bool('ex51350#)","vector(256, dec, bit)"],"ret_typ":"Capability","effects":[],"calls":["bit_to_bool","bitvector_access","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getCapHardPerms","arg_typs":["Capability"],"ret_typ":"vector(12, dec, bit)","effects":[],"calls":["bitvector_concat","bool_to_bits"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getCapPerms","arg_typs":["Capability"],"ret_typ":"vector(31, dec, bit)","effects":[],"calls":["bitvector_concat","getCapHardPerms"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"capToBits","arg_typs":["Capability"],"ret_typ":"vector(256, dec, bit)","effects":[],"calls":["bitvector_concat","bool_to_bits","getCapHardPerms"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"capToMemBits","arg_typs":["Capability"],"ret_typ":"vector(256, dec, bit)","effects":[],"calls":["capToBits","xor_vec"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"memBitsToCapability","arg_typs":["bool('ex51410#)","vector(256, dec, bit)"],"ret_typ":"Capability","effects":[],"calls":["capBitsToCapability","xor_vec"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"setCapPerms","arg_typs":["Capability","vector(31, dec, bit)"],"ret_typ":"Capability","effects":[],"calls":["bit_to_bool","bitvector_access","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"sealCap","arg_typs":["Capability","vector(24, dec, bit)"],"ret_typ":"(bool, Capability)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"unsealCap","arg_typs":["Capability"],"ret_typ":"Capability","effects":[],"calls":["ones_implicit"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getCapTop","arg_typs":["Capability"],"ret_typ":"range(0, 2 ^ 65)","effects":[],"calls":["add_atom","unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getCapBounds","arg_typs":["Capability"],"ret_typ":"(range(0, (2 ^ 64 - 1)), range(0, 2 ^ 65))","effects":[],"calls":["getCapBase","getCapTop"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getCapLength","arg_typs":["Capability"],"ret_typ":"range(0, 2 ^ 65)","effects":[],"calls":["unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getCapCursor","arg_typs":["Capability"],"ret_typ":"range(0, (2 ^ 64 - 1))","effects":[],"calls":["unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"setCapAddr","arg_typs":["Capability","vector(64, dec, bit)"],"ret_typ":"(bool, Capability)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"incCapOffset","arg_typs":["Capability","vector(64, dec, bit)"],"ret_typ":"(bool, Capability)","effects":[],"calls":["add_bits"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"setCapBounds","arg_typs":["Capability","vector(64, dec, bit)","vector(65, dec, bit)"],"ret_typ":"(bool, Capability)","effects":[],"calls":["bitvector_concat","sub_vec","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getRepresentableAlignmentMask","arg_typs":["vector(64, dec, bit)"],"ret_typ":"vector(64, dec, bit)","effects":[],"calls":["ones_implicit"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"getRepresentableLength","arg_typs":["vector(64, dec, bit)"],"ret_typ":"vector(64, dec, bit)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"int_to_cap","arg_typs":["vector(64, dec, bit)"],"ret_typ":"Capability","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"readCapReg","arg_typs":["vector(5, dec, bit)"],"ret_typ":"Capability","effects":["rreg"],"calls":["eq_bits","plain_vector_access","reg_deref","unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"readCapRegDDC","arg_typs":["vector(5, dec, bit)"],"ret_typ":"Capability","effects":["rreg"],"calls":["plain_vector_access","reg_deref","unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"capToString","arg_typs":["Capability","bool('ex51838#)"],"ret_typ":"string","effects":["escape"],"calls":["BitStr","MAX","bitvector_concat","concat_str","getCapBase","getCapLength","getCapOffset","getCapPerms","min_atom","mips_zero_extend","ones_implicit","skip_escape","to_bits"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"writeCapReg","arg_typs":["vector(5, dec, bit)","Capability"],"ret_typ":"unit","effects":["escape","wreg"],"calls":["capBitsToCapability","capToBits","capToString","eq_bits","neq_anything","plain_vector_access","prerr","prerr_endline","skip_escape","string_of_int","unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"CapEx_of_num","arg_typs":["int('e)"],"ret_typ":"CapEx","effects":[],"calls":["eq_int"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"num_of_CapEx","arg_typs":["CapEx"],"ret_typ":"{('e : Int), (0 <= 'e & 'e <= 23). int('e)}","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"undefined_CapEx","arg_typs":["unit"],"ret_typ":"CapEx","effects":["undef"],"calls":["internal_pick"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"Mk_CapCauseReg","arg_typs":["vector(16, dec, bit)"],"ret_typ":"CapCauseReg","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CapCauseReg_bits","arg_typs":["CapCauseReg"],"ret_typ":"vector(16, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_set_CapCauseReg_bits","arg_typs":["register(CapCauseReg)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["__bitfield_deref","vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CapCauseReg_bits","arg_typs":["CapCauseReg","vector(16, dec, bit)"],"ret_typ":"CapCauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CapCauseReg_ExcCode","arg_typs":["CapCauseReg"],"ret_typ":"vector(8, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CapCauseReg_ExcCode","arg_typs":["CapCauseReg","vector(8, dec, bit)"],"ret_typ":"CapCauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_get_CapCauseReg_RegNum","arg_typs":["CapCauseReg"],"ret_typ":"vector(8, dec, bit)","effects":[],"calls":["vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"_update_CapCauseReg_RegNum","arg_typs":["CapCauseReg","vector(8, dec, bit)"],"ret_typ":"CapCauseReg","effects":[],"calls":["vector_subrange","vector_update_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"execute_branch_pcc","arg_typs":["Capability"],"ret_typ":"unit","effects":["wreg"],"calls":["getCapOffset","to_bits"],"regs_read":[],"regs_written":["BranchPending","DelayedPC","DelayedPCC","NextInBranchDelay"],"trans_regs_read":[],"trans_regs_written":["BranchPending","DelayedPC","DelayedPCC","NextInBranchDelay"]},{"name":"ERETHook","arg_typs":["unit"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["_get_StatusReg_ERL","bit_to_bool","bits_to_bool","eq_bool","set_next_pcc"],"regs_read":["CP0Status","EPCC","ErrorEPCC"],"regs_written":[],"trans_regs_read":["CP0Status","EPCC","ErrorEPCC"],"trans_regs_written":["DelayedPCC","NextPCC"]},{"name":"raise_c2_exception","arg_typs":["CapEx","vector(5, dec, bit)"],"ret_typ":"'o","effects":["escape","rreg","wreg"],"calls":["bitvector_concat","raise_c2_exception8"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"MEMr_tagged","arg_typs":["vector(64, dec, bit)","int('size)"],"ret_typ":"(bool, vector(('size * 8), dec, bit))","effects":["rmem","rmemt"],"calls":["MEMr","and_vec","read_tag_bool","reverse_endianness"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMr_tagged_reserve","arg_typs":["vector(64, dec, bit)","int('size)"],"ret_typ":"(bool, vector(('size * 8), dec, bit))","effects":["rmem","rmemt"],"calls":["MEMr_reserve","and_vec","read_tag_bool","reverse_endianness"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMw_tagged","arg_typs":["vector(64, dec, bit)","int('size)","bool('ex51909#)","vector(('size * 8), dec, bit)"],"ret_typ":"unit","effects":["eamem","wmv","wmvt"],"calls":["MEMea","MEMval","and_vec","reverse_endianness","write_tag_bool"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMw_tagged_conditional","arg_typs":["vector(64, dec, bit)","int('size)","bool('ex51910#)","vector(('size * 8), dec, bit)"],"ret_typ":"bool","effects":["eamem","wmv","wmvt"],"calls":["MEMea_conditional","MEMval_conditional","and_vec","reverse_endianness","write_tag_bool"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"MEMw_wrapper","arg_typs":["vector(64, dec, bit)","int('n)","vector((8 * 'n), dec, bit)"],"ret_typ":"unit","effects":["eamem","escape","wmv","wmvt","wreg"],"calls":["MEMw_tagged","add_bits","and_vec","eq_bits","reverse_endianness","sub_atom","to_bits","vector_subrange"],"regs_read":[],"regs_written":["UART_WDATA","UART_WRITTEN"],"trans_regs_read":[],"trans_regs_written":["UART_WDATA","UART_WRITTEN"]},{"name":"MEMw_conditional_wrapper","arg_typs":["vector(64, dec, bit)","int('n)","vector((8 * 'n), dec, bit)"],"ret_typ":"bool","effects":["eamem","escape","wmv","wmvt"],"calls":["MEMw_tagged_conditional","add_bits","and_vec","eq_bits","sub_atom","to_bits"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"checkDDCPerms","arg_typs":["Capability","MemAccessType"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["not","not_bool","raise_c2_exception"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"addrWrapper","arg_typs":["vector(64, dec, bit)","MemAccessType","WordType"],"ret_typ":"vector(64, dec, bit)","effects":["escape","rreg","wreg"],"calls":["add_atom","checkDDCPerms","emod_int","getCapBounds","getCapCursor","gt_int","lt_int","pow2","raise_c2_exception","to_bits","unsigned","wordWidthBytes"],"regs_read":["DDC"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"addrWrapperUnaligned","arg_typs":["vector(64, dec, bit)","MemAccessType","WordTypeUnaligned"],"ret_typ":"vector(64, dec, bit)","effects":["escape","rreg","wreg"],"calls":["add_atom","checkDDCPerms","emod_int","getCapBounds","getCapCursor","gt_int","lt_int","pow2","raise_c2_exception","sub_atom","to_bits","unsigned"],"regs_read":["DDC"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_branch","arg_typs":["vector(64, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["add_atom","execute_branch_mips","getCapLength","gt_int","raise_c2_exception_noreg","unsigned"],"regs_read":["PCC"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","NextInBranchDelay","NextPC","NextPCC"]},{"name":"TranslatePC","arg_typs":["vector(64, dec, bit)"],"ret_typ":"vector(64, dec, bit)","effects":["escape","rreg","undef","wreg"],"calls":["SignalExceptionBadAddr","TLBTranslate","add_atom","emod_int","getCapBounds","gt_int","incrementCP0Count","neq_int","not","raise_c2_exception_noreg","to_bits","unsigned"],"regs_read":["PCC"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Compare","CP0Count","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBRandom","TLBWired","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Count","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBRandom","TLBXContext"]},{"name":"checkCP2usable","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","_get_StatusReg_CU","_set_CauseReg_CE","bit_to_bool","bitvector_access","not"],"regs_read":["CP0Cause","CP0Status"],"regs_written":["CP0Cause"],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"init_cp2_state","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","wreg"],"calls":["__id","foreach#","lteq_int","to_bits","writeCapReg"],"regs_read":[],"regs_written":["CPLR","CULR","DDC","DelayedPCC","EPCC","ErrorEPCC","KCC","KDC","KR1C","KR2C","NextPCC","PCC"],"trans_regs_read":[],"trans_regs_written":["CPLR","CULR","DDC","DelayedPCC","EPCC","ErrorEPCC","KCC","KDC","KR1C","KR2C","NextPCC","PCC"]},{"name":"cp2_next_pc","arg_typs":["unit"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["bits_to_bool"],"regs_read":["DelayedPCC","InBranchDelay","NextPCC"],"regs_written":["NextPCC","PCC"],"trans_regs_read":["DelayedPCC","InBranchDelay","NextPCC"],"trans_regs_written":["NextPCC","PCC"]},{"name":"get_CP0EPC","arg_typs":["unit"],"ret_typ":"vector(64, dec, bit)","effects":["rreg"],"calls":["getCapOffset","to_bits"],"regs_read":["EPCC"],"regs_written":[],"trans_regs_read":["EPCC"],"trans_regs_written":[]},{"name":"set_CP0EPC","arg_typs":["vector(64, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["add_bits","and_bool","getCapBase","int_to_cap","not","setCapOffset","to_bits"],"regs_read":["EPCC"],"regs_written":["EPCC"],"trans_regs_read":["EPCC"],"trans_regs_written":["EPCC"]},{"name":"get_CP0ErrorEPC","arg_typs":["unit"],"ret_typ":"vector(64, dec, bit)","effects":["rreg"],"calls":["getCapOffset","to_bits"],"regs_read":["ErrorEPCC"],"regs_written":[],"trans_regs_read":["ErrorEPCC"],"trans_regs_written":[]},{"name":"set_CP0ErrorEPC","arg_typs":["vector(64, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["add_bits","and_bool","getCapBase","int_to_cap","not","setCapOffset","to_bits"],"regs_read":["ErrorEPCC"],"regs_written":["ErrorEPCC"],"trans_regs_read":["ErrorEPCC"],"trans_regs_written":["ErrorEPCC"]},{"name":"dump_cp2_state","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg"],"calls":["__id","capToString","concat_str","foreach#","lteq_int","print","readCapReg","string_of_int","to_bits"],"regs_read":["CPLR","CULR","DDC","EPCC","ErrorEPCC","KCC","KDC","KR1C","KR2C","PCC"],"regs_written":[],"trans_regs_read":["CPLR","CULR","DDC","EPCC","ErrorEPCC","KCC","KDC","KR1C","KR2C","PCC"],"trans_regs_written":[]},{"name":"getCapFlags","arg_typs":["Capability"],"ret_typ":"vector(1, dec, bit)","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"setCapFlags","arg_typs":["Capability","vector(1, dec, bit)"],"ret_typ":"Capability","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"TLBWriteEntry","arg_typs":["vector(6, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","_get_TLBEntryHiReg_ASID","_get_TLBEntryHiReg_R","_get_TLBEntryHiReg_VPN2","_get_TLBEntryLoReg_C","_get_TLBEntryLoReg_CapL","_get_TLBEntryLoReg_CapS","_get_TLBEntryLoReg_D","_get_TLBEntryLoReg_G","_get_TLBEntryLoReg_PFN","_get_TLBEntryLoReg_V","_set_TLBEntry_asid","_set_TLBEntry_c0","_set_TLBEntry_c1","_set_TLBEntry_capl0","_set_TLBEntry_capl1","_set_TLBEntry_caps0","_set_TLBEntry_caps1","_set_TLBEntry_d0","_set_TLBEntry_d1","_set_TLBEntry_g","_set_TLBEntry_pagemask","_set_TLBEntry_pfn0","_set_TLBEntry_pfn1","_set_TLBEntry_r","_set_TLBEntry_v0","_set_TLBEntry_v1","_set_TLBEntry_valid","_set_TLBEntry_vpn2","and_bool","bits_to_bool","bool_to_bits","cast_unit_vec","eq_bits","plain_vector_access","unsigned"],"regs_read":["TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBPageMask"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBPageMask"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"decode","arg_typs":["vector(32, dec, bit)"],"ret_typ":"option(ast)","effects":[],"calls":["ADD","ADDI","ADDIU","ADDU","AND","ANDI","BCMPZ","BEQ","BREAK","C2Dump","CACHE","CAndAddr","CAndPerm","CBX","CBZ","CBuildCap","CCSeal","CCall","CCheckPerm","CCheckType","CClearTag","CCopyType","CFromPtr","CGetAddr","CGetAndAddr","CGetBase","CGetCID","CGetCause","CGetFlags","CGetLen","CGetOffset","CGetPCC","CGetPCCSetOffset","CGetPerm","CGetSealed","CGetTag","CGetType","CIncOffset","CIncOffsetImmediate","CJALR","CLC","CLCBI","CLLC","CLoad","CLoadLinked","CLoadTags","CMOVX","CMove","CPtrCmp","CRAM","CRAP","CReadHwr","CReturn","CSC","CSCC","CSeal","CSetAddr","CSetBounds","CSetBoundsExact","CSetBoundsImmediate","CSetCID","CSetCause","CSetFlags","CSetOffset","CStore","CStoreConditional","CSub","CTestSubset","CToPtr","CUnseal","CWriteHwr","ClearRegs","DADD","DADDI","DADDIU","DADDU","DDIV","DDIVU","DIV","DIVU","DMULT","DMULTU","DSLL","DSLL32","DSLLV","DSRA","DSRA32","DSRAV","DSRL","DSRL32","DSRLV","DSUB","DSUBU","ERET","HCF","J","JAL","JALR","JR","LDL","LDR","LUI","LWL","LWR","Load","MADD","MADDU","MFC0","MFHI","MFLO","MOVN","MOVZ","MSUB","MSUBU","MTC0","MTHI","MTLO","MUL","MULT","MULTU","NOR","OR","ORI","RDHWR","RI","SDL","SDR","SLL","SLLV","SLT","SLTI","SLTIU","SLTU","SRA","SRAV","SRL","SRLV","SUB","SUBU","SWL","SWR","SYNC","SYSCALL","Some","Store","TLBP","TLBR","TLBWI","TLBWR","TRAPIMM","TRAPREG","WAIT","XOR","XORI","and_bool","eq_bits","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"execute_XORI","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["mips_zero_extend","rGPR","wGPR","xor_vec"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_XOR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["rGPR","wGPR","xor_vec"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_WAIT","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","bits_to_bool"],"regs_read":["InBranchDelay","PC"],"regs_written":["NextPC"],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_TRAPREG","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","Comparison"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","compare","rGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_TRAPIMM","arg_typs":["vector(5, dec, bit)","vector(16, dec, bit)","Comparison"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","compare","mips_sign_extend","rGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_TLBWR","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["TLBWriteEntry","checkCP0Access"],"regs_read":["TLBRandom"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBPageMask","TLBRandom"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_TLBWI","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["TLBWriteEntry","checkCP0Access"],"regs_read":["TLBIndex"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex","TLBPageMask"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_TLBR","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["_get_TLBEntry_asid","_get_TLBEntry_c0","_get_TLBEntry_c1","_get_TLBEntry_capl0","_get_TLBEntry_capl1","_get_TLBEntry_caps0","_get_TLBEntry_caps1","_get_TLBEntry_d0","_get_TLBEntry_d1","_get_TLBEntry_g","_get_TLBEntry_pagemask","_get_TLBEntry_pfn0","_get_TLBEntry_pfn1","_get_TLBEntry_r","_get_TLBEntry_v0","_get_TLBEntry_v1","_get_TLBEntry_vpn2","_set_TLBEntryHiReg_ASID","_set_TLBEntryHiReg_R","_set_TLBEntryHiReg_VPN2","_set_TLBEntryLoReg_C","_set_TLBEntryLoReg_CapL","_set_TLBEntryLoReg_CapS","_set_TLBEntryLoReg_D","_set_TLBEntryLoReg_G","_set_TLBEntryLoReg_PFN","_set_TLBEntryLoReg_V","checkCP0Access","plain_vector_access","reg_deref","unsigned"],"regs_read":["TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex"],"regs_written":["TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBPageMask"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBPageMask"]},{"name":"execute_TLBP","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["_get_TLBEntryHiReg_bits","checkCP0Access","tlbSearch"],"regs_read":["TLBEntryHi"],"regs_written":["TLBIndex","TLBProbe"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBEntryHi"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBIndex","TLBProbe"]},{"name":"execute_Store","arg_typs":["WordType","bool('ex60259#)","vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["eamem","escape","rreg","undef","wmv","wmvt","wreg"],"calls":["Error_internal_error","MEMw_conditional_wrapper","MEMw_wrapper","SignalExceptionBadAddr","TLBTranslate","add_bits","addrWrapper","bit_to_bool","bitvector_access","bool_to_bits","isAddressAligned","mips_sign_extend","mips_zero_extend","not_bool","rGPR","vector_subrange","wGPR"],"regs_read":["CP0LLBit"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0LLBit","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_WDATA","UART_WRITTEN"]},{"name":"execute_SYSCALL","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_SYNC","arg_typs":["unit"],"ret_typ":"unit","effects":["barr"],"calls":["MEM_sync"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"execute_SWR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["eamem","escape","rreg","undef","wmv","wmvt","wreg"],"calls":["MEMw_wrapper","TLBTranslate","add_bits","addrWrapperUnaligned","bitvector_concat","eq_bits","mips_sign_extend","rGPR","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_WDATA","UART_WRITTEN"]},{"name":"execute_SWL","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["eamem","escape","rreg","undef","wmv","wmvt","wreg"],"calls":["MEMw_wrapper","TLBTranslate","add_bits","addrWrapperUnaligned","eq_bits","mips_sign_extend","rGPR","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_WDATA","UART_WRITTEN"]},{"name":"execute_SUBU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","mips_sign_extend","or_bool","rGPR","sub_vec","undefined_bit","undefined_vector","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SUB","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","undef","wreg"],"calls":["NotWordVal","SignalException","bit_to_bool","bitvector_access","mips_sign_extend","neq_bool","or_bool","rGPR","sub_vec","undefined_bit","undefined_vector","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_SRLV","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","mips_sign_extend","rGPR","shift_bits_right","undefined_bit","undefined_vector","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SRL","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","mips_sign_extend","rGPR","shift_bits_right","undefined_bit","undefined_vector","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SRAV","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","mips_sign_extend","rGPR","undefined_bit","undefined_vector","vector_subrange","wGPR","(operator >>_s)"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SRA","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","mips_sign_extend","rGPR","undefined_bit","undefined_vector","vector_subrange","wGPR","(operator >>_s)"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SLTU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["mips_zero_extend","rGPR","wGPR","(operator <_u)"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SLTIU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["mips_sign_extend","mips_zero_extend","rGPR","wGPR","(operator <_u)"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SLTI","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["lt_int","mips_zero_extend","rGPR","signed","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SLT","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["mips_zero_extend","rGPR","wGPR","(operator <_s)"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SLLV","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["mips_sign_extend","rGPR","shift_bits_left","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SLL","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["mips_sign_extend","rGPR","shift_bits_left","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_SDR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["eamem","escape","rreg","undef","wmv","wmvt","wreg"],"calls":["MEMw_wrapper","TLBTranslate","add_bits","addrWrapperUnaligned","bitvector_concat","eq_bits","mips_sign_extend","rGPR","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_WDATA","UART_WRITTEN"]},{"name":"execute_SDL","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["eamem","escape","rreg","undef","wmv","wmvt","wreg"],"calls":["MEMw_wrapper","TLBTranslate","add_bits","addrWrapperUnaligned","eq_bits","mips_sign_extend","rGPR","vector_subrange"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_WDATA","UART_WRITTEN"]},{"name":"execute_RI","arg_typs":["unit"],"ret_typ":"unit","effects":["barr","escape","rreg","wreg"],"calls":["SignalException","skip_barr"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_RDHWR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","_get_StatusReg_CU","bitvector_access","eq_anything","eq_bit2","eq_bits","getAccessLevel","mips_zero_extend","not_bool","or_bool","unsigned","wGPR"],"regs_read":["CP0Count","CP0HWREna","CP0Status","CP0UserLocal"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Count","CP0HWREna","CP0Status","CP0UserLocal","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_ORI","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["mips_zero_extend","or_vec","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_OR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["or_vec","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_NOR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["not_vec","or_vec","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_MULTU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","mips_sign_extend","or_bool","rGPR","undefined_bit","undefined_vector","vector_subrange","(operator *_u)"],"regs_read":[],"regs_written":["HI","LO"],"trans_regs_read":["GPR"],"trans_regs_written":["HI","LO"]},{"name":"execute_MULT","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","mips_sign_extend","or_bool","rGPR","undefined_bit","undefined_vector","vector_subrange","(operator *_s)"],"regs_read":[],"regs_written":["HI","LO"],"trans_regs_read":["GPR"],"trans_regs_written":["HI","LO"]},{"name":"execute_MUL","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","mips_sign_extend","or_bool","rGPR","undefined_bit","undefined_vector","vector_subrange","wGPR","(operator *_s)"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_MTLO","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["rGPR"],"regs_read":[],"regs_written":["LO"],"trans_regs_read":["GPR"],"trans_regs_written":["LO"]},{"name":"execute_MTHI","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["rGPR"],"regs_read":[],"regs_written":["HI"],"trans_regs_read":["GPR"],"trans_regs_written":["HI"]},{"name":"execute_MTC0","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(3, dec, bit)","bool('ex60462#)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","_get_CauseReg_IP","_set_CauseReg_IP","_set_CauseReg_IV","_set_ContextReg_PTEBase","_set_StatusReg_BEV","_set_StatusReg_CU","_set_StatusReg_ERL","_set_StatusReg_EXL","_set_StatusReg_IE","_set_StatusReg_IM","_set_StatusReg_KSU","_set_StatusReg_KX","_set_StatusReg_SX","_set_StatusReg_UX","_set_TLBEntryHiReg_ASID","_set_TLBEntryHiReg_R","_set_TLBEntryHiReg_VPN2","_set_TLBEntryLoReg_bits","_set_XContextReg_XPTEBase","and_bool","and_vec","bitvector_access","bitvector_concat","bool_to_bits","cast_unit_vec","checkCP0Access","eq_bits","mask","rGPR","set_CP0EPC","set_CP0ErrorEPC","vector_subrange"],"regs_read":["CP0Cause","CP0Status","TLBContext","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBXContext"],"regs_written":["CP0Cause","CP0Compare","CP0ConfigK0","CP0Count","CP0HWREna","CP0Status","CP0UserLocal","TLBContext","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex","TLBPageMask","TLBRandom","TLBWired","TLBXContext"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","EPCC","ErrorEPCC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Compare","CP0ConfigK0","CP0Count","CP0HWREna","CP0Status","CP0UserLocal","CapCause","DelayedPCC","EPCC","ErrorEPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex","TLBPageMask","TLBRandom","TLBWired","TLBXContext"]},{"name":"execute_MSUBU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","bitvector_concat","mips_sign_extend","or_bool","rGPR","sub_vec","undefined_bit","undefined_vector","vector_subrange","(operator *_u)"],"regs_read":["HI","LO"],"regs_written":["HI","LO"],"trans_regs_read":["GPR","HI","LO"],"trans_regs_written":["HI","LO"]},{"name":"execute_MSUB","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","bitvector_concat","mips_sign_extend","or_bool","rGPR","sub_vec","undefined_bit","undefined_vector","vector_subrange","(operator *_s)"],"regs_read":["HI","LO"],"regs_written":["HI","LO"],"trans_regs_read":["GPR","HI","LO"],"trans_regs_written":["HI","LO"]},{"name":"execute_MOVZ","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["eq_bits","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_MOVN","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["neq_bits","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_MFLO","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["wGPR"],"regs_read":["LO"],"regs_written":[],"trans_regs_read":["GPR","LO"],"trans_regs_written":["GPR"]},{"name":"execute_MFHI","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["wGPR"],"regs_read":["HI"],"regs_written":[],"trans_regs_read":["GPR","HI"],"trans_regs_written":["GPR"]},{"name":"execute_MFC0","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(3, dec, bit)","bool('ex60638#)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","_get_CauseReg_bits","_get_ContextReg_bits","_get_StatusReg_bits","_get_TLBEntryHiReg_bits","_get_TLBEntryLoReg_bits","_get_XContextReg_bits","and_bool","bitvector_concat","bool_to_bits","checkCP0Access","eq_bits","get_CP0EPC","get_CP0ErrorEPC","mips_sign_extend","mips_zero_extend","vector_subrange","wGPR"],"regs_read":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Compare","CP0ConfigK0","CP0Count","CP0HWREna","CP0LLAddr","CP0Status","CP0UserLocal","TLBContext","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex","TLBPageMask","TLBProbe","TLBRandom","TLBWired","TLBXContext"],"regs_written":[],"trans_regs_read":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Compare","CP0ConfigK0","CP0Count","CP0HWREna","CP0LLAddr","CP0Status","CP0UserLocal","CapCause","CurrentInstrBits","EPCC","ErrorEPCC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex","TLBPageMask","TLBProbe","TLBRandom","TLBWired","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_MADDU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","add_bits","bitvector_concat","mips_sign_extend","or_bool","rGPR","undefined_bit","undefined_vector","vector_subrange","(operator *_u)"],"regs_read":["HI","LO"],"regs_written":["HI","LO"],"trans_regs_read":["GPR","HI","LO"],"trans_regs_written":["HI","LO"]},{"name":"execute_MADD","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","add_bits","bitvector_concat","mips_sign_extend","or_bool","rGPR","undefined_bit","undefined_vector","vector_subrange","(operator *_s)"],"regs_read":["HI","LO"],"regs_written":["HI","LO"],"trans_regs_read":["GPR","HI","LO"],"trans_regs_written":["HI","LO"]},{"name":"execute_Load","arg_typs":["WordType","bool('ex60868#)","bool('ex60869#)","vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rmem","rreg","undef","wreg"],"calls":["Error_internal_error","MEMr_reserve_wrapper","MEMr_wrapper","SignalExceptionBadAddr","TLBTranslate","add_bits","addrWrapper","extendLoad","isAddressAligned","mips_sign_extend","not_bool","rGPR","wGPR"],"regs_read":[],"regs_written":["CP0LLAddr","CP0LLBit"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext","UART_RDATA","UART_RVALID"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0LLAddr","CP0LLBit","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_RVALID"]},{"name":"execute_LWR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rmem","rreg","undef","wreg"],"calls":["MEMr_wrapper","TLBTranslate","add_bits","addrWrapperUnaligned","bitvector_concat","eq_bits","mips_sign_extend","rGPR","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext","UART_RDATA","UART_RVALID"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_RVALID"]},{"name":"execute_LWL","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rmem","rreg","undef","wreg"],"calls":["MEMr_wrapper","TLBTranslate","add_bits","addrWrapperUnaligned","bitvector_concat","eq_bits","mips_sign_extend","rGPR","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext","UART_RDATA","UART_RVALID"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_RVALID"]},{"name":"execute_LUI","arg_typs":["vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["bitvector_concat","mips_sign_extend","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_LDR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rmem","rreg","undef","wreg"],"calls":["MEMr_wrapper","TLBTranslate","add_bits","addrWrapperUnaligned","bitvector_concat","eq_bits","mips_sign_extend","rGPR","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext","UART_RDATA","UART_RVALID"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_RVALID"]},{"name":"execute_LDL","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rmem","rreg","undef","wreg"],"calls":["MEMr_wrapper","TLBTranslate","add_bits","addrWrapperUnaligned","bitvector_concat","eq_bits","mips_sign_extend","rGPR","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","DDC","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext","UART_RDATA","UART_RVALID"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_RVALID"]},{"name":"execute_JR","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","bits_to_bool","execute_branch","rGPR"],"regs_read":["InBranchDelay"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","NextInBranchDelay","NextPC","NextPCC"]},{"name":"execute_JALR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_bits_int","bits_to_bool","execute_branch","rGPR","wGPR"],"regs_read":["InBranchDelay","PC"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","GPR","NextInBranchDelay","NextPC","NextPCC"]},{"name":"execute_JAL","arg_typs":["vector(26, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_bits_int","bits_to_bool","bitvector_concat","execute_branch","vector_subrange","wGPR"],"regs_read":["InBranchDelay","PC"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","GPR","NextInBranchDelay","NextPC","NextPCC"]},{"name":"execute_J","arg_typs":["vector(26, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_bits_int","bits_to_bool","bitvector_concat","execute_branch","vector_subrange"],"regs_read":["InBranchDelay","PC"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","NextInBranchDelay","NextPC","NextPCC"]},{"name":"execute_HCF","arg_typs":["unit"],"ret_typ":"unit","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"execute_ERET","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["ERETHook","_get_StatusReg_ERL","_set_StatusReg_ERL","_set_StatusReg_EXL","bit_to_bool","bits_to_bool","checkCP0Access","eq_bool","get_CP0EPC","get_CP0ErrorEPC"],"regs_read":["CP0Status"],"regs_written":["CP0LLBit","CP0Status","NextPC"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","EPCC","ErrorEPCC","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0LLBit","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_DSUBU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["rGPR","sub_vec","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DSUB","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","bit_to_bool","bitvector_access","mips_sign_extend","neq_bool","rGPR","sub_vec","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_DSRLV","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["rGPR","shift_bits_right","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DSRL32","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["bitvector_concat","rGPR","shift_bits_right","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DSRL","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["rGPR","shift_bits_right","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DSRAV","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["rGPR","vector_subrange","wGPR","(operator >>_s)"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DSRA32","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["bitvector_concat","rGPR","wGPR","(operator >>_s)"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DSRA","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["rGPR","wGPR","(operator >>_s)"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DSLLV","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["rGPR","shift_bits_left","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DSLL32","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["bitvector_concat","rGPR","shift_bits_left","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DSLL","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["rGPR","shift_bits_left","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DMULTU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["rGPR","vector_subrange","(operator *_u)"],"regs_read":[],"regs_written":["HI","LO"],"trans_regs_read":["GPR"],"trans_regs_written":["HI","LO"]},{"name":"execute_DMULT","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["rGPR","vector_subrange","(operator *_s)"],"regs_read":[],"regs_written":["HI","LO"],"trans_regs_read":["GPR"],"trans_regs_written":["HI","LO"]},{"name":"execute_DIVU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","eq_bits","mips_sign_extend","or_bool","quot_round_zero","rGPR","rem_round_zero","to_bits","undefined_bit","undefined_vector","unsigned","vector_subrange"],"regs_read":[],"regs_written":["HI","LO"],"trans_regs_read":["GPR"],"trans_regs_written":["HI","LO"]},{"name":"execute_DIV","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","eq_bits","mips_sign_extend","mult_atom","or_bool","quot_round_zero","rGPR","signed","sub_atom","to_bits","undefined_bit","undefined_vector","vector_subrange"],"regs_read":[],"regs_written":["HI","LO"],"trans_regs_read":["GPR"],"trans_regs_written":["HI","LO"]},{"name":"execute_DDIVU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["eq_int","quot_round_zero","rGPR","rem_round_zero","to_bits","undefined_bit","undefined_vector","unsigned"],"regs_read":[],"regs_written":["HI","LO"],"trans_regs_read":["GPR"],"trans_regs_written":["HI","LO"]},{"name":"execute_DDIV","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["eq_int","mult_atom","quot_round_zero","rGPR","signed","sub_atom","to_bits","undefined_bit","undefined_vector"],"regs_read":[],"regs_written":["HI","LO"],"trans_regs_read":["GPR"],"trans_regs_written":["HI","LO"]},{"name":"execute_DADDU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["add_bits","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DADDIU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["add_bits","mips_sign_extend","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_DADDI","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_bits","bit_to_bool","bitvector_access","mips_sign_extend","neq_bool","rGPR","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_DADD","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_bits","bit_to_bool","bitvector_access","mips_sign_extend","neq_bool","rGPR","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_ClearRegs","arg_typs":["ClearRegSet","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["__id","add_atom","bit_to_bool","bitvector_access","checkCP2usable","eq_anything","eq_int","foreach#","lteq_int","or_bool","to_bits","wGPR","writeCapReg","zeros_implicit"],"regs_read":[],"regs_written":["DDC"],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DDC","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CWriteHwr","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","and_bool","checkCP2usable","eq_int","getAccessLevel","grantsAccess","not","pcc_access_system_regs","raise_c2_exception","readCapReg","unsigned"],"regs_read":[],"regs_written":["CPLR","CULR","DDC","EPCC","ErrorEPCC","KCC","KDC","KR1C","KR2C"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CPLR","CULR","CapCause","DDC","DelayedPCC","EPCC","ErrorEPCC","KCC","KDC","KR1C","KR2C","NextPC","NextPCC"]},{"name":"execute_CUnseal","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_bool","checkCP2usable","getCapBase","getCapCursor","getCapTop","gteq_int","lt_int","neq_int","not","raise_c2_exception","readCapReg","unsealCap","unsigned","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CToPtr","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_bool","checkCP2usable","getCapBase","getCapCursor","not","raise_c2_exception","readCapReg","readCapRegDDC","sub_atom","to_bits","wGPR","zeros_implicit"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CTestSubset","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_vec","checkCP2usable","getCapBase","getCapPerms","getCapTop","gt_int","lt_int","mips_zero_extend","neq_bits","neq_bool","readCapReg","readCapRegDDC","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CSub","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getCapCursor","readCapReg","sub_atom","to_bits","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CStoreConditional","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)","WordType"],"ret_typ":"unit","effects":["eamem","escape","rreg","undef","wmv","wmvt","wreg"],"calls":["MEMw_conditional_wrapper","SignalExceptionBadAddr","TLBTranslate","add_atom","bit_to_bool","bitvector_access","bool_to_bits","checkCP2usable","getCapBase","getCapCursor","getCapTop","gt_int","isAddressAligned","lt_int","mips_zero_extend","not","rGPR","raise_c2_exception","readCapRegDDC","to_bits","vector_subrange","wGPR","wordWidthBytes"],"regs_read":["CP0LLBit"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0LLBit","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"execute_CStore","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)","vector(8, dec, bit)","WordType"],"ret_typ":"unit","effects":["eamem","escape","rreg","undef","wmv","wmvt","wreg"],"calls":["MEMw_wrapper","SignalExceptionBadAddr","TLBTranslate","add_atom","checkCP2usable","emod_int","getCapBase","getCapCursor","getCapTop","gt_int","isAddressAligned","lt_int","mult_atom","not","pow2","rGPR","raise_c2_exception","readCapRegDDC","signed","to_bits","unsigned","vector_subrange","wordWidthBytes"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_WDATA","UART_WRITTEN"]},{"name":"execute_CSetOffset","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["add_bits","and_bool","checkCP2usable","getCapBase","int_to_cap","rGPR","raise_c2_exception","readCapReg","setCapOffset","to_bits","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CSetFlags","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_bool","checkCP2usable","rGPR","raise_c2_exception","readCapReg","setCapFlags","truncate","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CSetCause","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["_set_CapCauseReg_ExcCode","_set_CapCauseReg_RegNum","checkCP2usable","not","pcc_access_system_regs","rGPR","raise_c2_exception_noreg","vector_subrange"],"regs_read":["CapCause"],"regs_written":["CapCause"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CSetCID","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getCapBase","getCapCursor","getCapTop","gteq_int","lt_int","not","raise_c2_exception","readCapReg","to_bits"],"regs_read":[],"regs_written":["CID"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CID","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CSetBoundsImmediate","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(11, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["add_atom","checkCP2usable","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","not","raise_c2_exception","readCapReg","setCapBounds","to_bits","unsigned","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CSetBoundsExact","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["add_atom","checkCP2usable","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","not","rGPR","raise_c2_exception","readCapReg","setCapBounds","to_bits","unsigned","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CSetBounds","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["add_atom","checkCP2usable","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","not","rGPR","raise_c2_exception","readCapReg","setCapBounds","to_bits","unsigned","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CSetAddr","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_bool","checkCP2usable","int_to_cap","rGPR","raise_c2_exception","readCapReg","setCapAddr","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CSeal","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getCapBase","getCapCursor","getCapTop","gt_int","gteq_int","lt_int","not","raise_c2_exception","readCapReg","sealCap","to_bits","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CSCC","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["eamem","escape","rreg","undef","wmv","wmvt","wreg"],"calls":["MEMw_tagged_conditional","SignalExceptionBadAddr","TLBTranslateC","add_atom","and_bool","bit_to_bool","bitvector_access","bool_to_bits","capToMemBits","checkCP2usable","emod_int","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","mips_zero_extend","neq_int","not","raise_c2_exception","readCapReg","readCapRegDDC","to_bits","wGPR"],"regs_read":["CP0LLBit"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0LLBit","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"execute_CSC","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)","vector(11, dec, bit)"],"ret_typ":"unit","effects":["eamem","escape","rreg","undef","wmv","wmvt","wreg"],"calls":["MEMw_tagged","SignalExceptionBadAddr","TLBTranslateC","add_atom","and_bool","capToMemBits","checkCP2usable","emod_int","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","mult_atom","neq_int","not","pow2","rGPR","raise_c2_exception","readCapReg","readCapRegDDC","signed","to_bits","unsigned"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"execute_CReturn","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","raise_c2_exception_noreg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CReadHwr","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","undef","wreg"],"calls":["SignalException","and_bool","checkCP2usable","eq_int","getAccessLevel","grantsAccess","not","pcc_access_system_regs","raise_c2_exception","unsigned","writeCapReg"],"regs_read":["CPLR","CULR","DDC","EPCC","ErrorEPCC","KCC","KDC","KR1C","KR2C"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CPLR","CULR","CapCause","CurrentInstrBits","DDC","EPCC","ErrorEPCC","InBranchDelay","KCC","KDC","KR1C","KR2C","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CRAP","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getRepresentableLength","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CRAM","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getRepresentableAlignmentMask","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CPtrCmp","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)","CPtrCmpOp"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["bool_to_bits","checkCP2usable","eq_anything","eq_int","getCapCursor","lt_int","mips_zero_extend","neq_anything","neq_bool","not","or_bool","readCapReg","to_bits","wGPR","(operator <_s)"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CMove","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","readCapReg","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CMOVX","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)","bool('ex61402#)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["bits_to_bool","bool_to_bits","checkCP2usable","eq_bits","rGPR","readCapReg","writeCapReg","xor_vec","zeros_implicit"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CLoadTags","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rmem","rmemt","rreg","undef","wreg"],"calls":["MEMr_tagged","SignalExceptionBadAddr","TLBTranslate","__id","add_atom","add_bits_int","bitvector_update","bool_to_bit","checkCP2usable","emod_int","eq_int","foreach#","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","lteq_int","mult_atom","not","raise_c2_exception","readCapRegDDC","sub_atom","to_bits","wGPR","zeros_implicit"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"execute_CLoadLinked","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","bool('ex61449#)","WordType"],"ret_typ":"unit","effects":["escape","rmem","rreg","undef","wreg"],"calls":["MEMr_reserve_wrapper","SignalExceptionBadAddr","TLBTranslate","add_atom","checkCP2usable","extendLoad","getCapBase","getCapCursor","getCapTop","gt_int","isAddressAligned","lt_int","not","raise_c2_exception","readCapRegDDC","to_bits","wGPR","wordWidthBytes"],"regs_read":[],"regs_written":["CP0LLAddr","CP0LLBit"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0LLAddr","CP0LLBit","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"execute_CLoad","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)","vector(8, dec, bit)","bool('ex61480#)","WordType"],"ret_typ":"unit","effects":["escape","rmem","rreg","undef","wreg"],"calls":["MEMr_wrapper","SignalExceptionBadAddr","TLBTranslate","add_atom","checkCP2usable","emod_int","extendLoad","getCapBase","getCapCursor","getCapTop","gt_int","isAddressAligned","lt_int","mult_atom","not","pow2","rGPR","raise_c2_exception","readCapRegDDC","signed","to_bits","unsigned","wGPR","wordWidthBytes"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext","UART_RDATA","UART_RVALID"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext","UART_RVALID"]},{"name":"execute_CLLC","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rmem","rmemt","rreg","undef","wreg"],"calls":["MEMr_tagged_reserve","SignalExceptionBadAddr","TLBTranslateC","add_atom","and_bool","checkCP2usable","emod_int","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","memBitsToCapability","neq_int","not","raise_c2_exception","readCapRegDDC","to_bits","writeCapReg"],"regs_read":[],"regs_written":["CP0LLAddr","CP0LLBit"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0LLAddr","CP0LLBit","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"execute_CLCBI","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rmem","rmemt","rreg","undef","wreg"],"calls":["MEMr_tagged","SignalExceptionBadAddr","TLBTranslateC","add_atom","and_bool","checkCP2usable","emod_int","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","memBitsToCapability","mult_atom","neq_int","not","pow2","raise_c2_exception","readCapRegDDC","signed","to_bits","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"execute_CLC","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)","vector(11, dec, bit)"],"ret_typ":"unit","effects":["escape","rmem","rmemt","rreg","undef","wreg"],"calls":["MEMr_tagged","SignalExceptionBadAddr","TLBTranslateC","add_atom","and_bool","checkCP2usable","emod_int","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","memBitsToCapability","mult_atom","neq_int","not","pow2","rGPR","raise_c2_exception","readCapRegDDC","signed","to_bits","unsigned","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBXContext"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBXContext"]},{"name":"execute_CJALR","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","bool('ex61609#)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_atom","add_bits_int","bits_to_bool","checkCP2usable","emod_int","execute_branch_pcc","getCapBase","getCapCursor","getCapTop","gt_int","lt_int","neq_int","not","raise_c2_exception","readCapReg","setCapOffset","writeCapReg"],"regs_read":["InBranchDelay","PC","PCC"],"regs_written":["NextInBranchDelay"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","NextInBranchDelay","NextPC","NextPCC"]},{"name":"execute_CIncOffsetImmediate","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(11, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["add_bits","and_bool","checkCP2usable","incCapOffset","int_to_cap","mips_sign_extend","raise_c2_exception","readCapReg","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CIncOffset","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["add_bits","and_bool","checkCP2usable","incCapOffset","int_to_cap","neq_bits","rGPR","raise_c2_exception","readCapReg","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CGetType","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","mips_zero_extend","readCapReg","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetTag","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["bool_to_bits","checkCP2usable","mips_zero_extend","readCapReg","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetSealed","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["bool_to_bits","checkCP2usable","mips_zero_extend","readCapReg","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetPerm","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getCapPerms","mips_zero_extend","readCapReg","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetPCCSetOffset","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","int_to_cap","rGPR","setCapOffset","writeCapReg"],"regs_read":["PCC"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CGetPCC","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","setCapOffset","writeCapReg"],"regs_read":["PC","PCC"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CGetOffset","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getCapOffset","readCapReg","to_bits","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetLen","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getCapLength","gt_int","readCapReg","to_bits","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetFlags","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getCapFlags","mips_zero_extend","readCapReg","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetCause","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["_get_CapCauseReg_bits","checkCP2usable","mips_zero_extend","not","pcc_access_system_regs","raise_c2_exception_noreg","wGPR"],"regs_read":["CapCause"],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetCID","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","wGPR"],"regs_read":["CID"],"regs_written":[],"trans_regs_read":["CID","CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetBase","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getCapBase","readCapReg","to_bits","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetAndAddr","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_vec","checkCP2usable","rGPR","readCapReg","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CGetAddr","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","readCapReg","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_CFromPtr","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["add_bits","checkCP2usable","eq_bits","getCapBase","int_to_cap","not","rGPR","raise_c2_exception","readCapRegDDC","setCapOffset","to_bits","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CCopyType","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","getCapBase","getCapTop","gteq_int","int_to_cap","lt_int","not","raise_c2_exception","readCapReg","setCapOffset","sub_atom","to_bits","unsigned","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CClearTag","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","readCapReg","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CCheckType","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","neq_bits","not","raise_c2_exception","readCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CCheckTag","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","not","raise_c2_exception","readCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CCheckPerm","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_vec","checkCP2usable","getCapPerms","mips_zero_extend","neq_bits","not","rGPR","raise_c2_exception","readCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CCall","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(11, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","bits_to_bool","checkCP2usable","eq_bits","getCapBase","getCapCursor","getCapOffset","getCapTop","gteq_int","lt_int","neq_bits","not","raise_c2_exception","readCapReg","set_next_pcc","to_bits","unsealCap"],"regs_read":["InBranchDelay"],"regs_written":["C26","NextPC"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["C26","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CCSeal","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP2usable","eq_int","getCapBase","getCapCursor","getCapTop","gt_int","gteq_int","lt_int","not","or_bool","raise_c2_exception","readCapReg","sealCap","to_bits","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CBuildCap","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_vec","checkCP2usable","getCapBase","getCapOffset","getCapPerms","getCapTop","gt_int","lt_int","neq_bits","not","raise_c2_exception","readCapReg","readCapRegDDC","setCapBounds","setCapOffset","setCapPerms","to_bits","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CBZ","arg_typs":["vector(5, dec, bit)","vector(16, dec, bit)","bool('ex61795#)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_bits","add_bits_int","bits_to_bool","bitvector_concat","bool_to_bits","checkCP2usable","eq_anything","execute_branch","mips_sign_extend","readCapReg","xor_vec"],"regs_read":["InBranchDelay","PC"],"regs_written":["NextInBranchDelay"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","NextInBranchDelay","NextPC","NextPCC"]},{"name":"execute_CBX","arg_typs":["vector(5, dec, bit)","vector(16, dec, bit)","bool('ex61816#)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_bits","add_bits_int","bits_to_bool","bitvector_concat","bool_to_bits","checkCP2usable","execute_branch","mips_sign_extend","readCapReg","xor_vec"],"regs_read":["InBranchDelay","PC"],"regs_written":["NextInBranchDelay"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","NextInBranchDelay","NextPC","NextPCC"]},{"name":"execute_CAndPerm","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_vec","checkCP2usable","getCapPerms","not","rGPR","raise_c2_exception","readCapReg","setCapPerms","vector_subrange","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CAndAddr","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["and_bool","and_vec","checkCP2usable","int_to_cap","rGPR","raise_c2_exception","readCapReg","setCapAddr","writeCapReg"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_CACHE","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["checkCP0Access"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_C2Dump","arg_typs":["vector(5, dec, bit)"],"ret_typ":"unit","effects":[],"calls":[],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"execute_BREAK","arg_typs":["unit"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","NextPC","NextPCC"]},{"name":"execute_BEQ","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)","bool('ex61846#)","bool('ex61847#)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_bits","add_bits_int","bits_to_bool","bitvector_concat","bool_to_bits","eq_bits","execute_branch","mips_sign_extend","rGPR","xor_vec"],"regs_read":["InBranchDelay","PC"],"regs_written":["NextInBranchDelay","NextPC"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","NextInBranchDelay","NextPC","NextPCC"]},{"name":"execute_BCMPZ","arg_typs":["vector(5, dec, bit)","vector(16, dec, bit)","Comparison","bool('ex61873#)","bool('ex61874#)"],"ret_typ":"unit","effects":["escape","rreg","wreg"],"calls":["SignalException","add_bits","add_bits_int","bits_to_bool","bitvector_concat","compare","execute_branch","mips_sign_extend","mips_zero_extend","rGPR","wGPR"],"regs_read":["InBranchDelay","PC"],"regs_written":["NextInBranchDelay","NextPC"],"trans_regs_read":["CP0Cause","CP0Status","CapCause","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["BranchPending","CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","CapCause","DelayedPC","DelayedPCC","EPCC","GPR","NextInBranchDelay","NextPC","NextPCC"]},{"name":"execute_ANDI","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["and_vec","mips_zero_extend","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_AND","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","wreg"],"calls":["and_vec","rGPR","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_ADDU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","add_bits","mips_sign_extend","or_bool","rGPR","undefined_bit","undefined_vector","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_ADDIU","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["rreg","undef","wreg"],"calls":["NotWordVal","add_atom","add_bits","mips_sign_extend","rGPR","sub_atom","undefined_bit","undefined_vector","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["GPR"],"trans_regs_written":["GPR"]},{"name":"execute_ADDI","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(16, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","undef","wreg"],"calls":["NotWordVal","SignalException","add_bits","bit_to_bool","bitvector_access","mips_sign_extend","neq_bool","rGPR","undefined_bit","undefined_vector","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute_ADD","arg_typs":["vector(5, dec, bit)","vector(5, dec, bit)","vector(5, dec, bit)"],"ret_typ":"unit","effects":["escape","rreg","undef","wreg"],"calls":["NotWordVal","SignalException","add_bits","bit_to_bool","bitvector_access","mips_sign_extend","neq_bool","or_bool","rGPR","undefined_bit","undefined_vector","vector_subrange","wGPR"],"regs_read":[],"regs_written":[],"trans_regs_read":["CP0Cause","CP0Status","CurrentInstrBits","GPR","InBranchDelay","KCC","LastInstrBits","PC","PCC"],"trans_regs_written":["CP0BadInstr","CP0BadInstrP","CP0Cause","CP0Status","DelayedPCC","EPCC","GPR","NextPC","NextPCC"]},{"name":"execute","arg_typs":["ast"],"ret_typ":"unit","effects":["barr","eamem","escape","rmem","rmemt","rreg","undef","wmv","wmvt","wreg"],"calls":["execute_ADD","execute_ADDI","execute_ADDIU","execute_ADDU","execute_AND","execute_ANDI","execute_BCMPZ","execute_BEQ","execute_BREAK","execute_C2Dump","execute_CACHE","execute_CAndAddr","execute_CAndPerm","execute_CBX","execute_CBZ","execute_CBuildCap","execute_CCSeal","execute_CCall","execute_CCheckPerm","execute_CCheckTag","execute_CCheckType","execute_CClearTag","execute_CCopyType","execute_CFromPtr","execute_CGetAddr","execute_CGetAndAddr","execute_CGetBase","execute_CGetCID","execute_CGetCause","execute_CGetFlags","execute_CGetLen","execute_CGetOffset","execute_CGetPCC","execute_CGetPCCSetOffset","execute_CGetPerm","execute_CGetSealed","execute_CGetTag","execute_CGetType","execute_CIncOffset","execute_CIncOffsetImmediate","execute_CJALR","execute_CLC","execute_CLCBI","execute_CLLC","execute_CLoad","execute_CLoadLinked","execute_CLoadTags","execute_CMOVX","execute_CMove","execute_CPtrCmp","execute_CRAM","execute_CRAP","execute_CReadHwr","execute_CReturn","execute_CSC","execute_CSCC","execute_CSeal","execute_CSetAddr","execute_CSetBounds","execute_CSetBoundsExact","execute_CSetBoundsImmediate","execute_CSetCID","execute_CSetCause","execute_CSetFlags","execute_CSetOffset","execute_CStore","execute_CStoreConditional","execute_CSub","execute_CTestSubset","execute_CToPtr","execute_CUnseal","execute_CWriteHwr","execute_ClearRegs","execute_DADD","execute_DADDI","execute_DADDIU","execute_DADDU","execute_DDIV","execute_DDIVU","execute_DIV","execute_DIVU","execute_DMULT","execute_DMULTU","execute_DSLL","execute_DSLL32","execute_DSLLV","execute_DSRA","execute_DSRA32","execute_DSRAV","execute_DSRL","execute_DSRL32","execute_DSRLV","execute_DSUB","execute_DSUBU","execute_ERET","execute_HCF","execute_J","execute_JAL","execute_JALR","execute_JR","execute_LDL","execute_LDR","execute_LUI","execute_LWL","execute_LWR","execute_Load","execute_MADD","execute_MADDU","execute_MFC0","execute_MFHI","execute_MFLO","execute_MOVN","execute_MOVZ","execute_MSUB","execute_MSUBU","execute_MTC0","execute_MTHI","execute_MTLO","execute_MUL","execute_MULT","execute_MULTU","execute_NOR","execute_OR","execute_ORI","execute_RDHWR","execute_RI","execute_SDL","execute_SDR","execute_SLL","execute_SLLV","execute_SLT","execute_SLTI","execute_SLTIU","execute_SLTU","execute_SRA","execute_SRAV","execute_SRL","execute_SRLV","execute_SUB","execute_SUBU","execute_SWL","execute_SWR","execute_SYNC","execute_SYSCALL","execute_Store","execute_TLBP","execute_TLBR","execute_TLBWI","execute_TLBWR","execute_TRAPIMM","execute_TRAPREG","execute_WAIT","execute_XOR","execute_XORI"],"regs_read":[],"regs_written":[],"trans_regs_read":["CID","CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Compare","CP0ConfigK0","CP0Count","CP0HWREna","CP0LLAddr","CP0LLBit","CP0Status","CP0UserLocal","CPLR","CULR","CapCause","CurrentInstrBits","DDC","EPCC","ErrorEPCC","GPR","HI","InBranchDelay","KCC","KDC","KR1C","KR2C","LO","LastInstrBits","PC","PCC","TLBContext","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex","TLBPageMask","TLBProbe","TLBRandom","TLBWired","TLBXContext","UART_RDATA","UART_RVALID"],"trans_regs_written":["BranchPending","C26","CID","CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Compare","CP0ConfigK0","CP0Count","CP0HWREna","CP0LLAddr","CP0LLBit","CP0Status","CP0UserLocal","CPLR","CULR","CapCause","DDC","DelayedPC","DelayedPCC","EPCC","ErrorEPCC","GPR","HI","KCC","KDC","KR1C","KR2C","LO","NextInBranchDelay","NextPC","NextPCC","TLBContext","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex","TLBPageMask","TLBProbe","TLBRandom","TLBWired","TLBXContext","UART_RVALID","UART_WDATA","UART_WRITTEN"]},{"name":"supported_instructions","arg_typs":["ast"],"ret_typ":"option(ast)","effects":[],"calls":["Some"],"regs_read":[],"regs_written":[],"trans_regs_read":[],"trans_regs_written":[]},{"name":"initialize_registers","arg_typs":["unit"],"ret_typ":"unit","effects":["undef","wreg"],"calls":["undefined_CapCauseReg","undefined_Capability","undefined_CauseReg","undefined_ContextReg","undefined_StatusReg","undefined_TLBEntry","undefined_TLBEntryHiReg","undefined_TLBEntryLoReg","undefined_XContextReg","undefined_bit","undefined_vector"],"regs_read":[],"regs_written":["BranchPending","C01","C02","C03","C04","C05","C06","C07","C08","C09","C10","C11","C12","C13","C14","C15","C16","C17","C18","C19","C20","C21","C22","C23","C24","C25","C26","C27","C28","C29","C30","C31","CID","CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Compare","CP0ConfigK0","CP0Count","CP0HWREna","CP0LLAddr","CP0LLBit","CP0Status","CP0UserLocal","CPLR","CULR","CapCause","CurrentInstrBits","DDC","DelayedPC","DelayedPCC","EPCC","ErrorEPCC","GPR","HI","InBranchDelay","KCC","KDC","KR1C","KR2C","LO","LastInstrBits","NextInBranchDelay","NextPC","NextPCC","PC","PCC","TLBContext","TLBEntry00","TLBEntry01","TLBEntry02","TLBEntry03","TLBEntry04","TLBEntry05","TLBEntry06","TLBEntry07","TLBEntry08","TLBEntry09","TLBEntry10","TLBEntry11","TLBEntry12","TLBEntry13","TLBEntry14","TLBEntry15","TLBEntry16","TLBEntry17","TLBEntry18","TLBEntry19","TLBEntry20","TLBEntry21","TLBEntry22","TLBEntry23","TLBEntry24","TLBEntry25","TLBEntry26","TLBEntry27","TLBEntry28","TLBEntry29","TLBEntry30","TLBEntry31","TLBEntry32","TLBEntry33","TLBEntry34","TLBEntry35","TLBEntry36","TLBEntry37","TLBEntry38","TLBEntry39","TLBEntry40","TLBEntry41","TLBEntry42","TLBEntry43","TLBEntry44","TLBEntry45","TLBEntry46","TLBEntry47","TLBEntry48","TLBEntry49","TLBEntry50","TLBEntry51","TLBEntry52","TLBEntry53","TLBEntry54","TLBEntry55","TLBEntry56","TLBEntry57","TLBEntry58","TLBEntry59","TLBEntry60","TLBEntry61","TLBEntry62","TLBEntry63","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex","TLBPageMask","TLBProbe","TLBRandom","TLBWired","TLBXContext","UART_RDATA","UART_RVALID","UART_WDATA","UART_WRITTEN"],"trans_regs_read":[],"trans_regs_written":["BranchPending","C01","C02","C03","C04","C05","C06","C07","C08","C09","C10","C11","C12","C13","C14","C15","C16","C17","C18","C19","C20","C21","C22","C23","C24","C25","C26","C27","C28","C29","C30","C31","CID","CP0BadInstr","CP0BadInstrP","CP0BadVAddr","CP0Cause","CP0Compare","CP0ConfigK0","CP0Count","CP0HWREna","CP0LLAddr","CP0LLBit","CP0Status","CP0UserLocal","CPLR","CULR","CapCause","CurrentInstrBits","DDC","DelayedPC","DelayedPCC","EPCC","ErrorEPCC","GPR","HI","InBranchDelay","KCC","KDC","KR1C","KR2C","LO","LastInstrBits","NextInBranchDelay","NextPC","NextPCC","PC","PCC","TLBContext","TLBEntry00","TLBEntry01","TLBEntry02","TLBEntry03","TLBEntry04","TLBEntry05","TLBEntry06","TLBEntry07","TLBEntry08","TLBEntry09","TLBEntry10","TLBEntry11","TLBEntry12","TLBEntry13","TLBEntry14","TLBEntry15","TLBEntry16","TLBEntry17","TLBEntry18","TLBEntry19","TLBEntry20","TLBEntry21","TLBEntry22","TLBEntry23","TLBEntry24","TLBEntry25","TLBEntry26","TLBEntry27","TLBEntry28","TLBEntry29","TLBEntry30","TLBEntry31","TLBEntry32","TLBEntry33","TLBEntry34","TLBEntry35","TLBEntry36","TLBEntry37","TLBEntry38","TLBEntry39","TLBEntry40","TLBEntry41","TLBEntry42","TLBEntry43","TLBEntry44","TLBEntry45","TLBEntry46","TLBEntry47","TLBEntry48","TLBEntry49","TLBEntry50","TLBEntry51","TLBEntry52","TLBEntry53","TLBEntry54","TLBEntry55","TLBEntry56","TLBEntry57","TLBEntry58","TLBEntry59","TLBEntry60","TLBEntry61","TLBEntry62","TLBEntry63","TLBEntryHi","TLBEntryLo0","TLBEntryLo1","TLBIndex","TLBPageMask","TLBProbe","TLBRandom","TLBWired","TLBXContext","UART_RDATA","UART_RVALID","UART_WDATA","UART_WRITTEN"]}]}